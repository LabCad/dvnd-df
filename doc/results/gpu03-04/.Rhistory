plot(hist8, col=rainbow(8)[8], add=T, pch=16)
plot(hist1, col=alpha(rainbow(8)[1], 0.5))
plot(hist2, col=alpha(rainbow(8)[2], 0.5), add=T, pch=16)
plot(hist3, col=alpha(rainbow(8)[3], 0.5), add=T, pch=16)
plot(hist4, col=alpha(rainbow(8)[4], 0.5), add=T, pch=16)
plot(hist5, col=alpha(rainbow(8)[5], 0.5), add=T, pch=16)
plot(hist6, col=alpha(rainbow(8)[6], 0.5), add=T, pch=16)
plot(hist7, col=alpha(rainbow(8)[7], 0.5), add=T, pch=16)
plot(hist8, col=alpha(rainbow(8)[8], 0.5), add=T, pch=16)
plot(hist1, col=rainbow(8)[1])
plot(hist2, col=rainbow(8)[2], add=T, pch=16)
plot(hist3, col=rainbow(8)[3], add=T, pch=16)
plot(hist4, col=rainbow(8)[4], add=T, pch=16)
plot(hist5, col=rainbow(8)[5], add=T, pch=16)
plot(hist6, col=rainbow(8)[6], add=T, pch=16)
plot(hist7, col=rainbow(8)[7], add=T, pch=16)
plot(hist8, col=rainbow(8)[8], add=T, pch=16)
plot(hist1, col=rainbow(8)[1], xlim=(0, 2))
plot(hist2, col=rainbow(8)[2], add=T, pch=16)
plot(hist3, col=rainbow(8)[3], add=T, pch=16)
plot(hist4, col=rainbow(8)[4], add=T, pch=16)
plot(hist5, col=rainbow(8)[5], add=T, pch=16)
plot(hist6, col=rainbow(8)[6], add=T, pch=16)
plot(hist7, col=rainbow(8)[7], add=T, pch=16)
plot(hist8, col=rainbow(8)[8], add=T, pch=16)
plot(hist1, col=rainbow(8)[1], xlim=c(0, 2))
plot(hist2, col=rainbow(8)[2], add=T, pch=16)
plot(hist3, col=rainbow(8)[3], add=T, pch=16)
plot(hist4, col=rainbow(8)[4], add=T, pch=16)
plot(hist5, col=rainbow(8)[5], add=T, pch=16)
plot(hist6, col=rainbow(8)[6], add=T, pch=16)
plot(hist7, col=rainbow(8)[7], add=T, pch=16)
plot(hist8, col=rainbow(8)[8], add=T, pch=16)
plot(hist1, col=rainbow(8)[1], xlim=c(0.7, 1.2))
plot(hist2, col=rainbow(8)[2], add=T, pch=16)
plot(hist3, col=rainbow(8)[3], add=T, pch=16)
plot(hist4, col=rainbow(8)[4], add=T, pch=16)
plot(hist5, col=rainbow(8)[5], add=T, pch=16)
plot(hist6, col=rainbow(8)[6], add=T, pch=16)
plot(hist7, col=rainbow(8)[7], add=T, pch=16)
plot(hist8, col=rainbow(8)[8], add=T, pch=16)
plot(hist1, col=rainbow(8)[1], xlim=c(0.85, 1.1))
plot(hist2, col=rainbow(8)[2], add=T, pch=16)
plot(hist3, col=rainbow(8)[3], add=T, pch=16)
plot(hist4, col=rainbow(8)[4], add=T, pch=16)
plot(hist5, col=rainbow(8)[5], add=T, pch=16)
plot(hist6, col=rainbow(8)[6], add=T, pch=16)
plot(hist7, col=rainbow(8)[7], add=T, pch=16)
plot(hist8, col=rainbow(8)[8], add=T, pch=16)
plot(hist1, col=rainbow(8)[1], xlim=c(0.885, 1.05))
plot(hist2, col=rainbow(8)[2], add=T, pch=16)
plot(hist3, col=rainbow(8)[3], add=T, pch=16)
plot(hist4, col=rainbow(8)[4], add=T, pch=16)
plot(hist5, col=rainbow(8)[5], add=T, pch=16)
plot(hist6, col=rainbow(8)[6], add=T, pch=16)
plot(hist7, col=rainbow(8)[7], add=T, pch=16)
plot(hist8, col=rainbow(8)[8], add=T, pch=16)
plot(hist1, col=rainbow(8)[1], xlim=c(0.885, 1.15))
plot(hist2, col=rainbow(8)[2], add=T, pch=16)
plot(hist3, col=rainbow(8)[3], add=T, pch=16)
plot(hist4, col=rainbow(8)[4], add=T, pch=16)
plot(hist5, col=rainbow(8)[5], add=T, pch=16)
plot(hist6, col=rainbow(8)[6], add=T, pch=16)
plot(hist7, col=rainbow(8)[7], add=T, pch=16)
plot(hist8, col=rainbow(8)[8], add=T, pch=16)
plot(hist1, col=rainbow(8)[1], xlim=c(0.885, 1.09))
plot(hist2, col=rainbow(8)[2], add=T, pch=16)
plot(hist3, col=rainbow(8)[3], add=T, pch=16)
plot(hist4, col=rainbow(8)[4], add=T, pch=16)
plot(hist5, col=rainbow(8)[5], add=T, pch=16)
plot(hist6, col=rainbow(8)[6], add=T, pch=16)
plot(hist7, col=rainbow(8)[7], add=T, pch=16)
plot(hist8, col=rainbow(8)[8], add=T, pch=16)
source('~/git/dvnd-df/doc/results/gpu01-04/dvnd-rvnd.r')
source('~/git/dvnd-df/doc/results/gpu01-04/dvnd-rvnd.r')
source('~/git/dvnd-df/doc/results/gpu01-04/dvnd-rvnd.r')
source('~/git/dvnd-df/doc/results/gpu01-04/dvnd-rvnd.r')
source('~/git/dvnd-df/doc/results/gpu01-04/dvnd-rvnd.r')
source('~/git/dvnd-df/doc/results/gpu01-04/dvnd-rvnd.r')
source('~/git/dvnd-df/doc/results/gpu01-04/dvnd-rvnd.r')
boxplot(time_dvnd_rvnd_n2w1, main="Time DVND/RVND n2w1", names=0:7, xlab="# Instance")
abline(h = 1, col = "red")
boxplot(time_dvnd_rvnd_n2w1, main="Time DVND/RVND n2w1", names=0:7)
abline(h = 1, col = "red")
boxplot(time_dvnd_rvnd_n2w1, main="Time DVND/RVND n2w1", names=0:7, xlab="# Instance")
abline(h = 1, col = "red")
boxplot(value_dvnd_rvnd_n2w1, main="Value DVND/RVND n2w1", names=0:7, xlab="# Instance")
abline(h = 1, col = "red")
source('~/git/dvnd-df/doc/results/gpu01-04/dvnd-rvnd.r')
boxplot(time_dvnd_rvnd_n2w1, main="", names=0:7, xlab="# Instance", ylab="Time DVND/RVND")
abline(h = 1, col = "red")
value_dvnd_rvnd_n2w1=list(compareVectors(value_dvnd_n1w1in0, value_rvnd_n1w1in0), compareVectors(value_dvnd_n1w1in1, value_rvnd_n1w1in1), compareVectors(value_dvnd_n1w1in2, value_rvnd_n1w1in2), compareVectors(value_dvnd_n1w1in3, value_rvnd_n1w1in3), compareVectors(value_dvnd_n1w1in4, value_rvnd_n1w1in4), compareVectors(value_dvnd_n1w1in5, value_rvnd_n1w1in5), compareVectors(value_dvnd_n1w1in6, value_rvnd_n1w1in6), compareVectors(value_dvnd_n1w1in7, value_rvnd_n1w1in7))
boxplot(value_dvnd_rvnd_n2w1, main="", names=0:7, xlab="# Instance", ylab="Value DVND/RVND")
abline(h = 1, col = "red")
boxplot(time_dvnd_rvnd_n2w1, main="Time DVND/RVND", names=0:7, xlab="# Instance", ylab="Time DVND/RVND")
abline(h = 1, col = "red")
value_dvnd_rvnd_n2w1=list(compareVectors(value_dvnd_n1w1in0, value_rvnd_n1w1in0), compareVectors(value_dvnd_n1w1in1, value_rvnd_n1w1in1), compareVectors(value_dvnd_n1w1in2, value_rvnd_n1w1in2), compareVectors(value_dvnd_n1w1in3, value_rvnd_n1w1in3), compareVectors(value_dvnd_n1w1in4, value_rvnd_n1w1in4), compareVectors(value_dvnd_n1w1in5, value_rvnd_n1w1in5), compareVectors(value_dvnd_n1w1in6, value_rvnd_n1w1in6), compareVectors(value_dvnd_n1w1in7, value_rvnd_n1w1in7))
boxplot(value_dvnd_rvnd_n2w1, main="Value DVND/RVND", names=0:7, xlab="# Instance", ylab="Value DVND/RVND")
abline(h = 1, col = "red")
for (i in 1:8) {
drawGraph(unlist(value_rvnd_n1w1[i]), unlist(value_dvnd_n2w1[i]), c("red", "blue"), "Sample", "Solution Value")
}
drawGraph <- function(seqvec1, seqvec2, colors, xlabel, ylabel){
if (missing(xlabel)) {
xlabel = ""
}
if (missing(ylabel)) {
ylabel = ""
}
plot(1:100, sort(seqvec1), type="o", col=colors[1], xlab = xlabel, ylab = ylabel, main = "", ylim=c(min(seqvec1, seqvec2), max(seqvec1, seqvec2)))
lines(1:100, sort(seqvec2), type = "o", col = colors[2])
legend("bottomright", inset=.02, c("RVND", "DVND"), fill=colors, horiz=TRUE, cex=0.8)
}
for (i in 1:8) {
drawGraph(unlist(value_rvnd_n1w1[i]), unlist(value_dvnd_n2w1[i]), c("red", "blue"), "Sample", "Solution Value")
}
for (i in 1:8) {
drawGraph(unlist(value_rvnd_n1w1[i]), unlist(value_dvnd_n2w1[i]), c("red", "blue"), "Sample", "Solution value")
}
legend("bottomright", inset=.02, c("RVND", "DVND"), fill=colors, horiz=TRUE, cex=0.8)
source('~/git/dvnd-df/doc/results/gpu01-04/dvnd-rvnd.r')
mean(time_rvnd_in0)
time_rvnd_in0
time_rvnd_in0[0]
unlist(time_rvnd_in0[0])
mean(time_rvnd_n1w1in0)
mean(time_rvnd_n1w2in0)
View(time_dvnd_in2)
source('~/git/dvnd-df/doc/results/gpu03-04/tabelas.r', echo=TRUE)
source('~/git/dvnd-df/doc/results/gpu03-04/tabelas.r', echo=TRUE)
for (sufix in c("Time", "Final", "Imp")) {
print(sufix)
for (mac_num in 1:4) {
instancCol = c(paste("rvnd", sufix, "Mean", sep = ""))
for (work_num in 1:10) {
instancCol = c(instancCol, paste("n", mac_num, "w", work_num, sufix, "Mean", sep = ""))
}
print(paste("n", mac_num, sep=""))
# print(instancCol)
write.table(format(medias[, instancCol, drop=FALSE], digits=4), sep="&", row.names = FALSE)
print("")
}
}
for (sufix in c("Time", "Final", "Imp")) {
print("")
print(sufix)
for (mac_num in 1:4) {
instancCol = c(paste("rvnd", sufix, "Mean", sep = ""))
for (work_num in 1:10) {
instancCol = c(instancCol, paste("n", mac_num, "w", work_num, sufix, "Mean", sep = ""))
}
print(paste("n", mac_num, sep=""))
# print(instancCol)
write.table(format(medias[, instancCol, drop=FALSE], digits=4), sep="&", row.names = FALSE)
}
}
for (sufix in c("Time", "Final", "Imp")) {
print("")
print(sufix)
for (mac_num in 1:4) {
instancCol = c(paste("rvnd", sufix, "Mean", sep = ""))
for (work_num in 1:10) {
instancCol = c(instancCol, paste("n", mac_num, "w", work_num, sufix, "Mean", sep = ""))
}
print(paste("n", mac_num, sep=""))
# print(instancCol)
# write.table(format(medias[, instancCol, drop=FALSE], digits=4), sep="&", row.names = FALSE)
write.table(medias[, instancCol, drop=FALSE], sep="&", row.names = FALSE)
}
}
for (sufix in c("Time", "Final", "Imp")) {
print("")
print(sufix)
for (mac_num in 1:4) {
instancCol = c(paste("rvnd", sufix, "Mean", sep = ""))
for (work_num in 1:10) {
instancCol = c(instancCol, paste("n", mac_num, "w", work_num, sufix, "Mean", sep = ""))
}
print(paste("n", mac_num, sep=""))
# print(instancCol)
write.table(format(medias[, instancCol, drop=FALSE], digits=4), sep="&", row.names = FALSE)
# write.table(medias[, instancCol, drop=FALSE], sep="&", row.names = FALSE)
}
}
for (sufix in c("Time", "Final", "Imp")) {
print("")
print(sufix)
for (mac_num in 1:4) {
instancCol = c(paste("rvnd", sufix, "Mean", sep = ""))
for (work_num in 1:10) {
instancCol = c(instancCol, paste("n", mac_num, "w", work_num, sufix, "Mean", sep = ""))
}
print(paste("n", mac_num, sep=""))
# print(instancCol)
write.table(format(medias[, instancCol, drop=FALSE], digits=4), sep="&", row.names = FALSE, quote = FALSE)
# write.table(medias[, instancCol, drop=FALSE], sep="&", row.names = FALSE)
}
}
source('~/git/dvnd-df/doc/results/gpu03-04/tabelas.r', echo=TRUE)
for (sufix in c("Time", "Final", "Imp")) {
print("")
print(sufix)
for (mac_num in 1:4) {
instancCol = c(paste("rvnd", sufix, "Mean", sep = ""))
for (work_num in 1:10) {
instancCol = c(instancCol, paste("n", mac_num, "w", work_num, sufix, "Mean", sep = ""))
}
print(paste("n", mac_num, sep=""))
# print(instancCol)
write.table(format(medias[, instancCol, drop=FALSE], digits=4), sep="&", row.names = FALSE, quote = FALSE)
# write.table(medias[, instancCol, drop=FALSE], sep="&", row.names = FALSE)
}
}
source('~/git/dvnd-df/doc/results/gpu03-04/tabelas.r', echo=TRUE)
for (sufix in c("Time", "Final", "Imp")) {
print("")
print(sufix)
for (mac_num in 1:4) {
instancCol = c(paste("rvnd", sufix, "Mean", sep = ""))
for (work_num in 1:10) {
instancCol = c(instancCol, paste("n", mac_num, "w", work_num, sufix, "Mean", sep = ""))
}
print(paste("n", mac_num, sep=""))
# print(instancCol)
write.table(format(medias[, instancCol, drop=FALSE], digits=4), sep="&", row.names = FALSE, quote = FALSE)
# write.table(medias[, instancCol, drop=FALSE], sep="&", row.names = FALSE)
}
}
for (sufix in c("Time", "Final", "Imp")) {
print("")
print(sufix)
for (mac_num in 1:4) {
instancCol = c(paste("rvnd", sufix, "Mean", sep = ""))
for (work_num in 1:10) {
instancCol = c(instancCol, paste("n", mac_num, "w", work_num, sufix, "Mean", sep = ""))
}
print(paste("n", mac_num, sep=""))
# print(instancCol)
write.table(format(medias[, instancCol, drop=FALSE], digits=3), sep="&", row.names = FALSE, quote = FALSE)
# write.table(medias[, instancCol, drop=FALSE], sep="&", row.names = FALSE)
}
}
for (sufix in c("Time", "Final", "Imp")) {
print("")
print(sufix)
for (mac_num in 1:4) {
instancCol = c(paste("rvnd", sufix, "Mean", sep = ""))
for (work_num in 1:10) {
instancCol = c(instancCol, paste("n", mac_num, "w", work_num, sufix, "Mean", sep = ""))
}
print(paste("n", mac_num, sep=""))
# print(instancCol)
write.table(format(medias[, instancCol, drop=FALSE], digits=3), dec=",", sep="&", row.names = FALSE, quote = FALSE)
# write.table(medias[, instancCol, drop=FALSE], sep="&", row.names = FALSE)
}
}
mydata <- mtcars[, c(1,3,4,5,6,7)]
head(mydata)
cormat <- round(cor(mydata),2)
head(cormat)
library(reshape2)
melted_cormat <- melt(cormat)
head(melted_cormat)
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()
library(ggplot2)
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()
ggplot(data = compNoIndMov, aes(x=n, y=w, fill=time)) + geom_tile()
ggplot(data = compNoIndMov[compNoIndMov$inum=0,], aes(x=n, y=w, fill=time)) + geom_tile()
ggplot(data = compNoIndMov[compNoIndMov$inum==0,], aes(x=n, y=w, fill=time)) + geom_tile()
ggplot(data = compNoIndMov[compNoIndMov$inum==0,], aes(x=n, y=factor(w), fill=time)) + geom_tile()
ggplot(data = compNoIndMov[compNoIndMov$inum==0,], aes(x=n, y=factor(w), fill=factor(time))) + geom_tile()
ggplot(data = compNoIndMov[compNoIndMov$inum==0,], aes(x=n, y=factor(w), fill=time)) + geom_tile()
ggplot(data = compNoIndMov[compNoIndMov$inum==0,], aes(x=factor(n), y=factor(w), fill=time)) + geom_tile()
ggplot(data = compNoIndMov[compNoIndMov$inum==0,], aes(x=factor(paste(type, n, sep="")), y=factor(w), fill=time)) + geom_tile()
ggplot(data = compNoIndMov[compNoIndMov$inum==1,], aes(x=factor(paste(type, n, sep="")), y=factor(w), fill=time)) + geom_tile()
ggplot(data = compNoIndMov[compNoIndMov$inum==2,], aes(x=factor(paste(type, n, sep="")), y=factor(w), fill=time)) + geom_tile()
ggplot(data = compNoIndMov[compNoIndMov$inum==3,], aes(x=factor(paste(type, n, sep="")), y=factor(w), fill=time)) + geom_tile()
ggplot(data = compNoIndMov[compNoIndMov$inum==4,], aes(x=factor(paste(type, n, sep="")), y=factor(w), fill=time)) + geom_tile()
ggplot(data = compNoIndMov[compNoIndMov$inum==5,], aes(x=factor(paste(type, n, sep="")), y=factor(w), fill=time)) + geom_tile()
ggplot(data = compNoIndMov[compNoIndMov$inum==6,], aes(x=factor(paste(type, n, sep="")), y=factor(w), fill=time)) + geom_tile()
ggplot(data = compNoIndMov[compNoIndMov$inum==7,], aes(x=factor(paste(type, n, sep="")), y=factor(w), fill=time)) + geom_tile()
library(lattice)
xyplot(gene1 ~ gene2 | specie , data=data , pch=20 , cex=3 , col=rgb(0.2,0.4,0.8,0.5) )
xyplot(n ~ w | inum , data=compNoIndMov , pch=20 , cex=3 , col=rgb(0.2,0.4,0.8,0.5) )
xyplot(time ~ w | n , data=compNoIndMov , pch=20 , cex=3 , col=rgb(0.2,0.4,0.8,0.5) )
xyplot(time ~ factor(w) | factor(n) , data=compNoIndMov , pch=20 , cex=3 , col=rgb(0.2,0.4,0.8,0.5) )
xyplot(time ~ factor(w) | factor(paste(type, n, sep="")), data=compNoIndMov, pch=20, cex=3, col=rgb(0.2,0.4,0.8,0.5) )
xyplot(time ~ factor(w) | factor(paste(type, n, sep="")), data=compNoIndMov[compNoIndMov$inum==0,], pch=20, cex=3, col=rgb(0.2,0.4,0.8,0.5) )
xyplot(time ~ factor(w) | factor(paste(type, n, sep="")), data=compNoIndMov[compNoIndMov$inum==7,], pch=20, cex=3, col=rgb(0.2,0.4,0.8,0.5) )
xyplot(time ~ factor(w) | factor(paste(type, n, sep="")), data=compNoIndMov[compNoIndMov$inum==7,], pch=20, cex=3)
# create data
names=c(rep("A", 20) , rep("B", 8) , rep("C", 30), rep("D", 80))
value=c( sample(2:5, 20 , replace=T) , sample(4:10, 8 , replace=T), sample(1:7, 30 , replace=T), sample(3:8, 80 , replace=T) )
data=data.frame(names,value)
# plot
ggplot(data, aes(x=names, y=value, fill=names)) +
geom_boxplot(alpha=0.4) +
stat_summary(fun.y=mean, geom="point", shape=20, size=10, color="red", fill="red") +
theme(legend.position="none") +
scale_fill_brewer(palette="Set3")
data
ggplot(compNoIndMov[compNoIndMov$inum == 0,], aes(x=n, y=time, fill=w)) +
geom_boxplot(alpha=0.4) +
stat_summary(fun.y=mean, geom="point", shape=20, size=10, color="red", fill="red") +
theme(legend.position="none") +
scale_fill_brewer(palette="Set3")
ggplot(compNoIndMov, aes(x=n, y=time, fill=w)) +
geom_boxplot(alpha=0.4) +
stat_summary(fun.y=mean, geom="point", shape=20, size=10, color="red", fill="red") +
theme(legend.position="none") +
scale_fill_brewer(palette="Set3")
ggplot(compNoIndMov[compNoIndMov$inum == 0,], aes(x=n, y=time, fill=w)) +
geom_boxplot(alpha=0.4) +
stat_summary(fun.y=mean, geom="point", shape=20, size=10, color="red", fill="red") +
theme(legend.position="none") +
scale_fill_brewer(palette="Set3")
data %>%
mutate(name = fct_reorder(name, val)) %>%
ggplot( aes(x=name, y=val)) +
geom_bar(stat="identity") +
coord_flip()
# Reverse side
data %>%
mutate(name = fct_reorder(name, desc(val))) %>%
ggplot( aes(x=name, y=val)) +
geom_bar(stat="identity") +
coord_flip()
data <- data.frame(
name=c("north","south","south-east","north-west","south-west","north-east","west","east"),
val=sample(seq(1,10), 8 )
)
data %>%
mutate(name = fct_reorder(name, val)) %>%
ggplot( aes(x=name, y=val)) +
geom_bar(stat="identity") +
coord_flip()
# Reverse side
data %>%
mutate(name = fct_reorder(name, desc(val))) %>%
ggplot( aes(x=name, y=val)) +
geom_bar(stat="identity") +
coord_flip()
install.packages("forecast")
# The mtcars dataset is proposed in R
head(mpg)
# Set a unique color with fill, colour, and alpha
ggplot(mpg, aes(x=class, y=hwy)) +
geom_boxplot(color="red", fill="orange", alpha=0.2)
# Set a different color for each group
ggplot(mpg, aes(x=class, y=hwy, fill=class)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")
# The mtcars dataset is proposed in R
head(mpg)
# Set a unique color with fill, colour, and alpha
ggplot(mpg, aes(x=class, y=hwy)) +
geom_boxplot(color="red", fill="orange", alpha=0.2)
# Set a different color for each group
ggplot(mpg, aes(x=class, y=hwy, fill=class)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")
ggplot(compNoIndMov[compNoIndMov$inum==0,], aes(x=n, y=time, fill=n)) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
ggplot(compNoIndMov[compNoIndMov$inum==0,], aes(x=class, y=hwy, fill=class)) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
ggplot(mpg, aes(x=class, y=hwy, fill=class)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")
ggplot(mpg, aes(x=class, y=hwy, fill=class)) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
ggplot(compNoIndMov[compNoIndMov$inum==0,], aes(x=n, y=w, fill=n)) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
ggplot(compNoIndMov[compNoIndMov$inum==0,], aes(x=factor(n), y=w, fill=n)) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
ggplot(compNoIndMov[compNoIndMov$inum==0,], aes(x=factor(n), y=w, fill=factor(n))) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
ggplot(compNoIndMov[compNoIndMov$inum==0,], aes(x=factor(n), y=w, fill=n)) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
ggplot(compNoIndMov[compNoIndMov$inum==0,], aes(x=factor(n), y=w, fill=factor(n))) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
ggplot(compNoIndMov[compNoIndMov$inum==0,], aes(x=factor(n), y=time, fill=factor(n))) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
ggplot(compNoIndMov[compNoIndMov$inum==0 & compNoIndMov$n==1,], aes(x=factor(n), y=time, fill=factor(n))) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
ggplot(compNoIndMov[compNoIndMov$inum==0 & compNoIndMov$n==1,], aes(x=factor(paste(type, n, sep="")), y=time, fill=factor(paste(type, n, sep="")))) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
ggplot(compNoIndMov[compNoIndMov$inum==0 & compNoIndMov$n==1,], aes(x=factor(paste(type, w, sep="")), y=time, fill=factor(paste(type, w, sep="")))) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
ggplot(compNoIndMov[compNoIndMov$inum==0 & compNoIndMov$n==1,], aes(x=factor(paste("w", w, type, sep="")), y=time, fill=factor(paste("w", w, type, sep="")))) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
ggplot(compNoIndMov[compNoIndMov$inum==0 & compNoIndMov$n==1,], aes(x=factor(paste("w", w, type, sep="")), y=time, fill=factor(w)) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
str_pad(1:8, 2, pad="0")
library(stringr)
str_pad(1:8, 2, pad="0")
ggplot(compNoIndMov[compNoIndMov$inum==0 & compNoIndMov$n==1,], aes(x=factor(paste("w", w, type, sep="")), y=time, fill=factor(w)) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
ggplot(compNoIndMov[compNoIndMov$inum==0 & compNoIndMov$n==1,], aes(x=factor(paste("w", str_pad(w, 2, pad="0"), type, sep="")), y=time, fill=factor(w)) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
ggplot(compNoIndMov[compNoIndMov$inum==0 & compNoIndMov$n==1,], aes(x=factor(paste("w", w, type, sep="")), y=time, fill=factor(w)) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
compNoIndMov$w = str_pad(compNoIndMov$w, 2, pad="0")
compNoIndMov$w = str_pad(compNoIndMov$w, 2, pad="0")
View(compNoIndMov)
compNoIndMov$w1 = str_pad(compNoIndMov$w, 2, pad="0")
foreach(mac_num=1:4, .combine=cbind) %dopar% {
library(ggplot2)
for (input_num in 0:7) {
ggplot(compNoIndMov[compNoIndMov$inum==input_num & compNoIndMov$n==mac_num,], aes(x=factor(paste(type, "W", wpad, sep="")), y=time, fill=factor(w))) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
removeLegendPrintPoints(mychart, paste("chart/boxplot/n", mac_num, "/imp", input_num, ".png", sep=""))
}
}
source('~/git/dvnd-df/doc/results/gpu03-04/gplot.r', echo=TRUE)
removeLegendPrintPoints <- function(mychart, file_name) {
mychart = mychart + geom_point(size=6, alpha=0.6)
mychart = mychart + theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), legend.title = element_blank())
ggsave(file_name, plot = mychart, device="png")
return(mychart)
}
foreach(mac_num=1:4, .combine=cbind) %dopar% {
library(ggplot2)
for (input_num in 0:7) {
ggplot(compNoIndMov[compNoIndMov$inum==input_num & compNoIndMov$n==mac_num,], aes(x=factor(paste(type, "W", wpad, sep="")), y=time, fill=factor(w))) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
removeLegendPrintPoints(mychart, paste("chart/boxplot/n", mac_num, "/imp", input_num, ".png", sep=""))
}
}
foreach(mac_num=1:4, .combine=cbind) %dopar% {
library(ggplot2)
for (input_num in 0:7) {
mychart = ggplot(compNoIndMov[compNoIndMov$inum==input_num & compNoIndMov$n==mac_num,], aes(x=factor(paste(type, "W", wpad, sep="")), y=time, fill=factor(w))) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
removeLegendPrintPoints(mychart, paste("chart/boxplot/n", mac_num, "/imp", input_num, ".png", sep=""))
}
}
foreach(mac_num=1:4, .combine=cbind) %dopar% {
library(ggplot2)
for (input_num in 0:7) {
mychart = ggplot(compNoIndMov[compNoIndMov$inum==input_num & compNoIndMov$n==mac_num,], aes(x=factor(paste(type, "W", wpad, sep="")), y=time, fill=factor(w))) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
ggsave(paste("chart/boxplot/n", mac_num, "/imp", input_num, ".png", sep=""), plot = mychart, device="png")
}
}
foreach(mac_num=1:4, .combine=cbind) %dopar% {
library(ggplot2)
for (input_num in 0:7) {
mychart = ggplot(compNoIndMov[compNoIndMov$inum==input_num & compNoIndMov$n==mac_num,], aes(x=factor(paste(type, "W", wpad, sep="")), y=time, fill=factor(w))) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
ggsave(paste("chart/boxplot/n", mac_num, "/time", input_num, ".png", sep=""), plot = mychart, device="png")
mychart = ggplot(compNoIndMov[compNoIndMov$inum==input_num & compNoIndMov$n==mac_num,], aes(x=factor(paste(type, "W", wpad, sep="")), y=imp, fill=factor(w))) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
ggsave(paste("chart/boxplot/n", mac_num, "/imp", input_num, ".png", sep=""), plot = mychart, device="png")
mychart = ggplot(compNoIndMov[compNoIndMov$inum==input_num & compNoIndMov$n==mac_num,], aes(x=factor(paste(type, "W", wpad, sep="")), y=count, fill=factor(w))) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
ggsave(paste("chart/boxplot/n", mac_num, "/count", input_num, ".png", sep=""), plot = mychart, device="png")
}
}
foreach(mac_num=1:4, .combine=cbind) %dopar% {
library(ggplot2)
for (input_num in 0:7) {
mychart = ggplot(compNoIndMov[compNoIndMov$inum==input_num & compNoIndMov$n==mac_num,], aes(x=factor(paste(type, "W", wpad, sep="")), y=time, fill=factor(w))) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
mychart = mychart + theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), legend.title = element_blank())
ggsave(paste("chart/boxplot/n", mac_num, "/time", input_num, ".png", sep=""), plot = mychart, device="png")
mychart = ggplot(compNoIndMov[compNoIndMov$inum==input_num & compNoIndMov$n==mac_num,], aes(x=factor(paste(type, "W", wpad, sep="")), y=imp, fill=factor(w))) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
mychart = mychart + theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), legend.title = element_blank())
ggsave(paste("chart/boxplot/n", mac_num, "/imp", input_num, ".png", sep=""), plot = mychart, device="png")
mychart = ggplot(compNoIndMov[compNoIndMov$inum==input_num & compNoIndMov$n==mac_num,], aes(x=factor(paste(type, "W", wpad, sep="")), y=count, fill=factor(w))) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
mychart = mychart + theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), legend.title = element_blank())
ggsave(paste("chart/boxplot/n", mac_num, "/count", input_num, ".png", sep=""), plot = mychart, device="png")
}
}
foreach(mac_num=1:4, .combine=cbind) %dopar% {
library(ggplot2)
for (input_num in 0:7) {
# mychart = ggplot(compNoIndMov[compNoIndMov$inum==input_num & compNoIndMov$n==mac_num,], aes(x=factor(paste(type, "W", wpad, sep="")), y=time, fill=factor(w))) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
# mychart = mychart + theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), legend.title = element_blank())
# ggsave(paste("chart/boxplot/n", mac_num, "/time", input_num, ".png", sep=""), plot = mychart, device="png")
#
# mychart = ggplot(compNoIndMov[compNoIndMov$inum==input_num & compNoIndMov$n==mac_num,], aes(x=factor(paste(type, "W", wpad, sep="")), y=imp, fill=factor(w))) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
# mychart = mychart + theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), legend.title = element_blank())
# ggsave(paste("chart/boxplot/n", mac_num, "/imp", input_num, ".png", sep=""), plot = mychart, device="png")
mychart = ggplot(compNoIndMov[compNoIndMov$inum==input_num & compNoIndMov$n==mac_num,], aes(x=factor(paste(type, "W", wpad, sep="")), y=count, fill=factor(w))) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
mychart = mychart + theme(axis.title.x=element_blank(), axis.ticks.x=element_blank(), legend.title = element_blank())
ggsave(paste("chart/boxplot/n", mac_num, "/count", input_num, ".png", sep=""), plot = mychart, device="png")
}
}
foreach(mac_num=1:4, .combine=cbind) %dopar% {
library(ggplot2)
for (input_num in 0:7) {
# mychart = ggplot(compNoIndMov[compNoIndMov$inum==input_num & compNoIndMov$n==mac_num,], aes(x=factor(paste(type, "W", wpad, sep="")), y=time, fill=factor(w))) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
# mychart = mychart + theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), legend.title = element_blank())
# ggsave(paste("chart/boxplot/n", mac_num, "/time", input_num, ".png", sep=""), plot = mychart, device="png")
#
# mychart = ggplot(compNoIndMov[compNoIndMov$inum==input_num & compNoIndMov$n==mac_num,], aes(x=factor(paste(type, "W", wpad, sep="")), y=imp, fill=factor(w))) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
# mychart = mychart + theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), legend.title = element_blank())
# ggsave(paste("chart/boxplot/n", mac_num, "/imp", input_num, ".png", sep=""), plot = mychart, device="png")
mychart = ggplot(compNoIndMov[compNoIndMov$inum==input_num & compNoIndMov$n==mac_num,], aes(x=factor(paste(type, "W", wpad, sep="")), y=count, fill=factor(w))) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
mychart = mychart + theme(axis.title.x=element_blank(), axis.ticks.x=element_blank(), legend.title = element_blank())
ggsave(paste("chart/boxplot/n", mac_num, "/count", input_num, ".png", sep=""), plot = mychart, device="png")
}
}
mychart = ggplot(compNoIndMov[compNoIndMov$inum==input_num & compNoIndMov$n==mac_num,], aes(x=factor(paste(type, "W", wpad, sep="")), y=count, fill=factor(w))) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
mychart = mychart + theme(axis.title.x=element_blank(), axis.ticks.x=element_blank(), legend.title = element_blank())
mychart = ggplot(compNoIndMov[compNoIndMov$inum==input_num & compNoIndMov$n==mac_num,], aes(x=factor(paste(type, "W", wpad, sep="")), y=count, fill=factor(w))) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
mychart = ggplot(compNoIndMov[compNoIndMov$inum==0 & compNoIndMov$n==1,], aes(x=factor(paste(type, "W", wpad, sep="")), y=count, fill=factor(w))) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
mychart = mychart + theme(axis.title.x=element_blank(), axis.ticks.x=element_blank(), legend.title = element_blank())
mychart
"oi"
"oi"[1:1]
mychart = ggplot(compNoIndMov[compNoIndMov$inum==0 & compNoIndMov$n==1,], aes(x=factor(paste(type, "W", wpad, sep="")), y=count, fill=factor(w))) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
mychart = mychart + theme(axis.title.x=element_blank(), axis.ticks.x=element_blank(), legend.title = element_blank())
mychart + stat_summary(fun.y=mean, geom="point", shape=20, size=10, color="red", fill="red")
mychart + stat_summary(fun.y=mean, geom="point", shape=20, size=2, color="red", fill="red")
substr("oiii", 1)
substr("oiii", 1, 1)
source('~/git/dvnd-df/doc/results/gpu03-04/gplot.r', echo=TRUE)
foreach(mac_num=1:4, .combine=cbind) %dopar% {
library(ggplot2)
for (input_num in 0:7) {
mychart = ggplot(compNoIndMov[compNoIndMov$inum==input_num & compNoIndMov$n==mac_num,], aes(x=factor(paste(substr(type, 1, 1), "w", wpad, sep="")), y=time, fill=factor(w))) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
mychart = mychart + theme(axis.title.x=element_blank(), axis.ticks.x=element_blank(), legend.title = element_blank())
mychart = mychart + stat_summary(fun.y=mean, geom="point", shape=20, size=2, color="red", fill="red")
ggsave(paste("chart/boxplot/n", mac_num, "/time", input_num, ".png", sep=""), plot = mychart, device="png")
mychart = ggplot(compNoIndMov[compNoIndMov$inum==input_num & compNoIndMov$n==mac_num,], aes(x=factor(paste(substr(type, 1, 1), "w", wpad, sep="")), y=imp, fill=factor(w))) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
mychart = mychart + theme(axis.title.x=element_blank(), axis.ticks.x=element_blank(), legend.title = element_blank())
mychart = mychart + stat_summary(fun.y=mean, geom="point", shape=20, size=2, color="red", fill="red")
ggsave(paste("chart/boxplot/n", mac_num, "/imp", input_num, ".png", sep=""), plot = mychart, device="png")
mychart = ggplot(compNoIndMov[compNoIndMov$inum==input_num & compNoIndMov$n==mac_num,], aes(x=factor(paste(substr(type, 1, 1), "w", wpad, sep="")), y=count, fill=factor(w))) + geom_boxplot(alpha=0.3) + theme(legend.position="none")
mychart = mychart + theme(axis.title.x=element_blank(), axis.ticks.x=element_blank(), legend.title = element_blank())
mychart = mychart + stat_summary(fun.y=mean, geom="point", shape=20, size=2, color="red", fill="red")
ggsave(paste("chart/boxplot/n", mac_num, "/count", input_num, ".png", sep=""), plot = mychart, device="png")
}
}
